//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataAccessLayer
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class FSD_SBAEntities : DbContext
    {
        public FSD_SBAEntities()
            : base("name=FSD_SBAEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Parent_Task_Table> Parent_Task_Table { get; set; }
        public virtual DbSet<Project_Table> Project_Table { get; set; }
        public virtual DbSet<Task_Table> Task_Table { get; set; }
        public virtual DbSet<Users_Table> Users_Table { get; set; }
    
        public virtual int AddParentTaskDetails(string parentTaskName)
        {
            var parentTaskNameParameter = parentTaskName != null ?
                new ObjectParameter("parentTaskName", parentTaskName) :
                new ObjectParameter("parentTaskName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddParentTaskDetails", parentTaskNameParameter);
        }
    
        public virtual int AddProjectDetails(string projectName, Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate, Nullable<int> priority, Nullable<int> userID)
        {
            var projectNameParameter = projectName != null ?
                new ObjectParameter("projectName", projectName) :
                new ObjectParameter("projectName", typeof(string));
    
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            var priorityParameter = priority.HasValue ?
                new ObjectParameter("priority", priority) :
                new ObjectParameter("priority", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddProjectDetails", projectNameParameter, startdateParameter, enddateParameter, priorityParameter, userIDParameter);
        }
    
        public virtual int AddTaskDetails(string projectName, string taskname, string parenttaskname, Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate, Nullable<int> priority, Nullable<int> userid, Nullable<bool> isended)
        {
            var projectNameParameter = projectName != null ?
                new ObjectParameter("projectName", projectName) :
                new ObjectParameter("projectName", typeof(string));
    
            var tasknameParameter = taskname != null ?
                new ObjectParameter("taskname", taskname) :
                new ObjectParameter("taskname", typeof(string));
    
            var parenttasknameParameter = parenttaskname != null ?
                new ObjectParameter("parenttaskname", parenttaskname) :
                new ObjectParameter("parenttaskname", typeof(string));
    
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("Enddate", enddate) :
                new ObjectParameter("Enddate", typeof(System.DateTime));
    
            var priorityParameter = priority.HasValue ?
                new ObjectParameter("priority", priority) :
                new ObjectParameter("priority", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var isendedParameter = isended.HasValue ?
                new ObjectParameter("isended", isended) :
                new ObjectParameter("isended", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddTaskDetails", projectNameParameter, tasknameParameter, parenttasknameParameter, startdateParameter, enddateParameter, priorityParameter, useridParameter, isendedParameter);
        }
    
        public virtual int AddUserDetails(string firstName, string lastName, Nullable<int> employeeID)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("firstName", firstName) :
                new ObjectParameter("firstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("lastName", lastName) :
                new ObjectParameter("lastName", typeof(string));
    
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("employeeID", employeeID) :
                new ObjectParameter("employeeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddUserDetails", firstNameParameter, lastNameParameter, employeeIDParameter);
        }
    
        public virtual int DeleteProject(Nullable<int> projectID)
        {
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("projectID", projectID) :
                new ObjectParameter("projectID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteProject", projectIDParameter);
        }
    
        public virtual int DeleteUser(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteUser", userIDParameter);
        }
    
        public virtual int EndTask(Nullable<int> taskid)
        {
            var taskidParameter = taskid.HasValue ?
                new ObjectParameter("taskid", taskid) :
                new ObjectParameter("taskid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EndTask", taskidParameter);
        }
    
        public virtual ObjectResult<GetProjectDetails_Result> GetProjectDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProjectDetails_Result>("GetProjectDetails");
        }
    
        public virtual ObjectResult<GetProjectDetailsByProjectName_Result> GetProjectDetailsByProjectName(string projectName)
        {
            var projectNameParameter = projectName != null ?
                new ObjectParameter("projectName", projectName) :
                new ObjectParameter("projectName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProjectDetailsByProjectName_Result>("GetProjectDetailsByProjectName", projectNameParameter);
        }
    
        public virtual ObjectResult<GetTaskDetails_Result> GetTaskDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTaskDetails_Result>("GetTaskDetails");
        }
    
        public virtual ObjectResult<GetTaskDetailsByProjectName_Result> GetTaskDetailsByProjectName(string projectName)
        {
            var projectNameParameter = projectName != null ?
                new ObjectParameter("projectName", projectName) :
                new ObjectParameter("projectName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTaskDetailsByProjectName_Result>("GetTaskDetailsByProjectName", projectNameParameter);
        }
    
        public virtual ObjectResult<GetUserDetails_Result> GetUserDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserDetails_Result>("GetUserDetails");
        }
    
        public virtual ObjectResult<GetUserDetailsByUserName_Result> GetUserDetailsByUserName(string userNameOrEmployeeID)
        {
            var userNameOrEmployeeIDParameter = userNameOrEmployeeID != null ?
                new ObjectParameter("UserNameOrEmployeeID", userNameOrEmployeeID) :
                new ObjectParameter("UserNameOrEmployeeID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserDetailsByUserName_Result>("GetUserDetailsByUserName", userNameOrEmployeeIDParameter);
        }
    
        public virtual int UpdateProjectDetails(Nullable<int> projectID, string projectName, Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate, Nullable<int> priority, Nullable<int> userID)
        {
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("projectID", projectID) :
                new ObjectParameter("projectID", typeof(int));
    
            var projectNameParameter = projectName != null ?
                new ObjectParameter("projectName", projectName) :
                new ObjectParameter("projectName", typeof(string));
    
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            var priorityParameter = priority.HasValue ?
                new ObjectParameter("priority", priority) :
                new ObjectParameter("priority", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateProjectDetails", projectIDParameter, projectNameParameter, startdateParameter, enddateParameter, priorityParameter, userIDParameter);
        }
    
        public virtual int UpdateTaskDetails(string projectName, Nullable<int> taskid, string taskname, string parenttaskname, Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate, Nullable<int> priority, Nullable<int> userid, Nullable<bool> isended)
        {
            var projectNameParameter = projectName != null ?
                new ObjectParameter("projectName", projectName) :
                new ObjectParameter("projectName", typeof(string));
    
            var taskidParameter = taskid.HasValue ?
                new ObjectParameter("taskid", taskid) :
                new ObjectParameter("taskid", typeof(int));
    
            var tasknameParameter = taskname != null ?
                new ObjectParameter("taskname", taskname) :
                new ObjectParameter("taskname", typeof(string));
    
            var parenttasknameParameter = parenttaskname != null ?
                new ObjectParameter("parenttaskname", parenttaskname) :
                new ObjectParameter("parenttaskname", typeof(string));
    
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("Enddate", enddate) :
                new ObjectParameter("Enddate", typeof(System.DateTime));
    
            var priorityParameter = priority.HasValue ?
                new ObjectParameter("priority", priority) :
                new ObjectParameter("priority", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var isendedParameter = isended.HasValue ?
                new ObjectParameter("isended", isended) :
                new ObjectParameter("isended", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateTaskDetails", projectNameParameter, taskidParameter, tasknameParameter, parenttasknameParameter, startdateParameter, enddateParameter, priorityParameter, useridParameter, isendedParameter);
        }
    
        public virtual int UpdateUserDetails(Nullable<int> userid, string firstName, string lastName, Nullable<int> employeeID)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("firstName", firstName) :
                new ObjectParameter("firstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("lastName", lastName) :
                new ObjectParameter("lastName", typeof(string));
    
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("employeeID", employeeID) :
                new ObjectParameter("employeeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateUserDetails", useridParameter, firstNameParameter, lastNameParameter, employeeIDParameter);
        }
    }
}
